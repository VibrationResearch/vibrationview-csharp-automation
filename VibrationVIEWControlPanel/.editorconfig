# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = tab
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,cpp,hpp,c,h}]
indent_size = 4
charset = utf-8-bom
insert_final_newline = true
trim_trailing_whitespace = true

# Powershell
[*ps1]
indent_style = space
indent_size = 4

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

[*.cs]
# const fields are Pascal cased
dotnet_naming_rule.const_fields_are_pascal_cased.symbols   = const_members
dotnet_naming_symbols.const_members.applicable_kinds           = field
dotnet_naming_symbols.const_members.applicable_accessibilities = *
dotnet_naming_symbols.const_members.required_modifiers = static,const

dotnet_naming_rule.const_fields_are_pascal_cased.style    = const_members_style
dotnet_naming_style.const_members_style.capitalization = pascal_case

dotnet_naming_rule.const_fields_are_pascal_cased.severity = warning
# const fields are Pascal cased

# Private fields must begin with underscore
dotnet_naming_rule.private_fields_must_begin_with_underscore.symbols   = private_fields
dotnet_naming_symbols.private_fields.applicable_kinds           = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private,protected

dotnet_naming_rule.private_fields_must_begin_with_underscore.style    = private_fields_style
dotnet_naming_style.private_fields_style.required_prefix = _
dotnet_naming_style.private_fields_style.capitalization = camel_case

dotnet_naming_rule.private_fields_must_begin_with_underscore.severity = warning
# Private fields must begin with underscore

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
# Prefer "var" everywhere

csharp_style_namespace_declarations = block_scoped:silent

# Don't prefer braces
csharp_prefer_braces = true:silent
# Don't prefer braces

# IDE0090: Use 'new(...)'
csharp_style_implicit_object_creation_when_type_is_apparent = false
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_space_around_binary_operators = before_and_after
# IDE0090: Use 'new(...)'

# Defaults from https://github.com/dotnet/roslyn/blame/master/.editorconfig
# # Dotnet code style settings:
# [*.{cs,vb}]
# # Sort using and Import directives with System.* appearing first
# dotnet_sort_system_directives_first = true
# # Avoid "this." and "Me." if not necessary
# dotnet_style_qualification_for_field = false:suggestion
# dotnet_style_qualification_for_property = false:suggestion
# dotnet_style_qualification_for_method = false:suggestion
# dotnet_style_qualification_for_event = false:suggestion
# 
# # Use language keywords instead of framework type names for type references
# dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
# dotnet_style_predefined_type_for_member_access = true:suggestion
# 
# # Suggest more modern language features when available
# dotnet_style_object_initializer = true:suggestion
# dotnet_style_collection_initializer = true:suggestion
# dotnet_style_coalesce_expression = true:suggestion
# dotnet_style_null_propagation = true:suggestion
# dotnet_style_explicit_tuple_names = true:suggestion
# 
# # CSharp code style settings:
# [*.cs]
# # Prefer "var" everywhere
# csharp_style_var_for_built_in_types = true:suggestion
# csharp_style_var_when_type_is_apparent = true:suggestion
# csharp_style_var_elsewhere = true:suggestion
# 
# # Prefer method-like constructs to have a block body
# csharp_style_expression_bodied_methods = false:none
# csharp_style_expression_bodied_constructors = false:none
# csharp_style_expression_bodied_operators = false:none
# 
# # Prefer property-like constructs to have an expression-body
# csharp_style_expression_bodied_properties = true:none
# csharp_style_expression_bodied_indexers = true:none
# csharp_style_expression_bodied_accessors = true:none
# 
# # Suggest more modern language features when available
# csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
# csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# csharp_style_inlined_variable_declaration = true:suggestion
# csharp_style_throw_expression = true:suggestion
# csharp_style_conditional_delegate_call = true:suggestion
# 
# # Newline settings
# csharp_new_line_before_open_brace = all
# csharp_new_line_before_else = true
# csharp_new_line_before_catch = true
# csharp_new_line_before_finally = true
# csharp_new_line_before_members_in_object_initializers = true
# csharp_new_line_before_members_in_anonymous_types = true